// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URI")
}

model registerUser {
  id               Int      @id @default(autoincrement())
  name             String
  email            String   @unique
  registrationType String
  institutionName  String
  country          String
  phone            String
  earlyBird        Boolean
  regFee           String
  isPaid           Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model sponsor {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  level     String
  amount    String
  isPaid    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model speaker {
  id              String   @id @default(uuid())
  name            String
  email           String   @unique
  phone           String
  institutionName String
  paperTitle      String
  country         String
  placeDate       String
  conferenceTitle String
  attendeeType    AttendeeType
  fileUrl         String?
  message         String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum AttendeeType {
  presenter
  listener
}

model Admin {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  role          AdminRole
  referralCode  String?   @unique
  referredUsers User[]    @relation("ReferredUsers")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum AdminRole {
  SUPER_ADMIN
  ADMIN
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  referredBy String?
  admin      Admin?   @relation("ReferredUsers", fields: [adminId], references: [id])
  adminId    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
